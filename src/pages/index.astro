---
import EasyBanking from '@/components/pages/home/banking/EasyBanking.astro';
import Hero from '@/components/pages/home/hero/Hero.svelte';
import LegacyToEfficiency from '@/components/pages/home/legacy/LegacyToEfficiency.astro';
import Layout from '@/layouts/Layout.astro';
import { getPageData } from '@/lib/helpers';
import Cta from '@/components/pages/home/Cta.svelte';
import type {
  EasyBanking as EasyBankingData,
  Hero as HeroData,
  HomePageData,
  LegacyToEfficiency as LegacyToEfficiencyData,
  Cta as CtaData,
  TrustedBy as TrustedByData,
} from '@/lib/types/homePage';

import TrustedBy from '@/components/pages/home/trustedBy/TrustedBy.astro';

const query = `*[_type == 'homePage'][0] {
  ...,
  sections[]{
    ...,
    flowDiagram[]{
      _key,
      platform,
      root,
      logo
    },
		logos[]{
  ...,
  asset->{
    ...,
    metadata {
      lqip,
      dimensions
    }
  }
}
  }
}`;

const data = await getPageData<HomePageData>(query, {
  locale: 'en-SG',
  defaultLocale: 'en-SG',
});
const { page, site } = data;
const { sections, seo } = page;
---

<Layout seo={seo} site={site}>
  {
    sections.map((section) => {
      switch (section._type) {
        case 'homePage.hero':
          return <Hero client:load {...(section as HeroData)} />;
        case 'homePage.legacyToEfficiency':
          return (
            <LegacyToEfficiency {...(section as LegacyToEfficiencyData)} />
          );
        case 'homePage.easyBanking':
          return <EasyBanking {...(section as EasyBankingData)} />;
        case 'homePage.cta':
          return <Cta client:load {...(section as CtaData)} />;
        case 'homePage.trustedBy':
          return <TrustedBy {...(section as TrustedByData)} />;
        default:
          return null;
      }
    })
  }
</Layout>
